#!/bin/sh
# @author: Matthew Story <matthewstory@gmail.com>
# @license: BSD (see: LICENSE)
# d2cdb -- loads file contents into cdb keyed on file name, recursively
# -t forces use of tinycdb's cdb program (with -c)
# -m uses leaf directory as key, uses filenames for key ordering
barf() { echo "fatal: $0: $*" >&2; exit 111; }
safe() { "$@" || barf "cannot $*"; }
usage() { echo "usage: $0 [-tm] cdb cdbtmp dir [[dir]...]" >&2; exit 100; }

cdbmake='cdbmake'
tinycdb='cdb -c -t'
cdb="$cdbmake"
multi=0
while getopts 'tm' opt
do
    case "$opt" in
        t) cdb="$tinycdb"
            ;;
        m) multi=1
            ;;
        *) usage
            ;;
    esac
done
shift $((OPTIND - 1)) # drop opts

# validation
[ $# -lt 3 ] && usage
cdbfile="$1"
cdbtmp="$2"
if [ "$cdb" = "$tinycdb" ]
then
    cdbfile="$2"
    cdbtmp="$1"
fi
shift 2;

{ for dir in "$@"
do
    [ -d "$dir" ] || barf "$dir is not a directory";
    safe find -L "$dir" -type f | sed "s@^$dir/*@@" | sort | while read f
    do
         key="$f"
         [ 0 -lt $multi ] && key="${f%/*}"
         safe printf "+%d,%d:%s->" "${#key}" "$(stat -f '%z' "$dir/$f")" "$key"
         printf "\n" | safe cat "$dir/$f" -
    done
done
printf "\n"; } | safe $cdb "$cdbfile" "$cdbtmp"
